from django.urls import reverse_lazy
from . import settings as settings
from django.utils.translation import ugettext_lazy as _

"""
Django settings for Django_Example project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'na1)zp34m0hov&*38y_7di1=&025rp)g=c9013tiwl6ch4=w6d'


#SiteMap
SITE_ID = 1

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sitemaps',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'blog',
    'taggit',
    'Doctors',
    'mptt',
    'meta',
    'ckeditor',
    'ckeditor_uploader',
    'garpix_slider',
    'filer',
    'easy_thumbnails',
    'google_analytics',
    'django_elasticsearch_dsl',
    'django_elasticsearch_dsl_drf',
    'leaflet',
    'djgeojson',
    'jet',
    'jet.dashboard',
    'django.contrib.admin' ,





]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Drman.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Doctors/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'Drman.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'ava100',
        'HOST': 'postgresql',
        'PORT': 5432,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



ELASTICSEARCH_DSL={
    'default': {
        'hosts': 'localhost:9200'
    },
}


GOOGLE_ANALYTICS = {
    'google_analytics_id': 'UA-134848198-1',
}

MARKITUP_FILTER = ('markdown.markdown', {'safe_mode': True})

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'fa-IR'


TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# STATIC_URL = '/static/'


# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "Doctors/static"),
#     '/Doctors/static/',
# ]


EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'avaa.hmh@gmail.com'
EMAIL_HOST_PASSWORD = 'wavedrop'
EMAIL_PORT = 587
EMAIL_USE_TLS = True




# ToDo : see book Python Web Development with Django with permission
# it's important for media in ckeditor Editor
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static/'),
# ]

STATIC_ROOT = os.path.join(BASE_DIR,'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

CKEDITOR_UPLOAD_PATH = 'filer_public/'
CKEDITOR_IMAGE_BACKEND = "pillow"


LEAFLET_CONFIG = {
    'SPATIAL_EXTENT': (5.0, 44.0, 7.5, 46) ,
    'DEFAULT_ZOOM': 20,
    'MIN_ZOOM': 10,
    'MAX_ZOOM': 18,
}


LEAFLET_CONFIG = {
    'PLUGINS': {
        'leaflet-control-geocoder' : {'js' : 'https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js' ,
                            'css' : ['https://github.com/stefanocudini/leaflet-search/blob/master/dist/leaflet-search.src.css', 'https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css'] ,
                            'image' : '/static/images/geocoder.png',
                            'auto-include': True,
                            }

    }
}


SEO_FOR_MODELS = [
    'Doctors.models.DoctorsPost',

]

TIME_INPUT_FORMATS = [
    '%I:%M:%S %p',  # 6:22:44 PM
    '%I:%M %p',  # 6:22 PM
    '%I %p',  # 6 PM
    '%H:%M:%S',     # '14:30:59'
    '%H:%M:%S.%f',  # '14:30:59.000200'
    '%H:%M',        # '14:30'
]

JET_THEMES = [
    {
        'theme': 'default', # theme folder name
        'color': '#47bac1', # color of the theme's button in user menu
        'title': 'Default' # theme title
    },
    {
        'theme': 'green',
        'color': '#44b78b',
        'title': 'Green'
    },
    {
        'theme': 'light-green',
        'color': '#2faa60',
        'title': 'Light Green'
    },
    {
        'theme': 'light-violet',
        'color': '#a464c4',
        'title': 'Light Violet'
    },
    {
        'theme': 'light-blue',
        'color': '#5EADDE',
        'title': 'Light Blue'
    },
    {
        'theme': 'light-gray',
        'color': '#222',
        'title': 'Light Gray'
    }
]


# ROOT_URL = '/gallery/'
# LOGIN_URL = ROOT_URL + 'login/'
# MEDIA_URL = ROOT_URL + 'media/'
# ADMIN_MEDIA_PREFIX = MEDIA_URL + 'admin/'


# LOGIN_REDIRECT_URL = reverse_lazy('blog:dashboard')
# LOGIN_URL = reverse_lazy('blog:login')
# LOGOUT_URL = reverse_lazy('blog:logout')
#
#
# JAVASCRIPT_URL = settings.STATIC_URL+'js/'
# CSS_URL = getattr(settings, 'CSS_URL', settings.STATIC_URL+'css/')
#
# JQUERY_URL = getattr(settings, 'JQUERY_URL', '%sjs/jquery-3.3.1.min.js' % settings.STATIC_URL)
# JQUERY_UI_URL = getattr(settings, 'JQUERY_UI_URL',
#                   '%sjs/jquery-ui.min.js' % settings.STATIC_URL)
# JQUERY_UI_CSS_URL = getattr(settings, 'JQUERY_UI_CSS_URL',
#                   settings.STATIC_URL+'css/jquery-ui/custom/jquery-ui.css')
#
# ELRTE_ROOT_URL = getattr(settings, 'ELRTE_ROOT_URL', settings.STATIC_URL+'elrte/')
# ELRTE_LANG_URL = getattr(settings, 'ELRTE_LANG_URL', ELRTE_ROOT_URL+'js/i18n/')
# ELRTE_JS_ELRTE_URL = getattr(settings, 'ELRTE_JS_ELRTE_URL',
#                   ELRTE_ROOT_URL+'js/elrte.min.js')
# ELRTE_CSS_ELRTE_URL = getattr(settings, 'ELRTE_CSS_ELRTE_URL',
#                   ELRTE_ROOT_URL+'css/elrte.min.css')
