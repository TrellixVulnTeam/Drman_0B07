# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-04-22 16:44
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djgeojson.fields
import filer.fields.image
import meta.models
import mptt.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClosingRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('end', models.DateTimeField(verbose_name='End')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Reason')),
            ],
            options={
                'verbose_name': 'تاریخ تعطیلی',
                'verbose_name_plural': 'تاریخ های تعطیلی',
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'نظر',
                'verbose_name_plural': 'نظرات',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorsPost',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250, unique=True)),
                ('slug', models.SlugField(allow_unicode=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('site', models.URLField()),
                ('address', models.CharField(max_length=250)),
                ('geom', djgeojson.fields.PointField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Doctors_posts', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='doctors_likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'پزشک',
                'verbose_name_plural': 'لیست پزشک ها',
                'ordering': ('-publish',),
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name='Loc_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(allow_unicode=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Loc_children', to='Doctors.Loc_Category')),
            ],
            options={
                'verbose_name': 'موقعیت',
                'verbose_name_plural': 'لیست موقعیت ها',
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('geom', djgeojson.fields.PointField()),
            ],
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'شنبه'), (1, 'یک شنبه'), (2, 'دو شنبه'), (3, 'سه شنبه'), (4, 'چهار شنبه'), (5, 'پنج شنبه'), (6, 'جمعه')])),
                ('from_hour', models.TimeField(verbose_name='Start')),
                ('to_hour', models.TimeField(verbose_name='End')),
                ('is_closed', models.BooleanField()),
                ('doctors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='OpeningHours', to='Doctors.DoctorsPost', verbose_name='DoctorsPost')),
            ],
            options={
                'verbose_name': 'ساعت کاری',
                'verbose_name_plural': 'ساعات کاری',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('caption', models.CharField(blank=True, max_length=250)),
                ('image', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Photo', to='Doctors.DoctorsPost')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='QuestionView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=40)),
                ('session', models.CharField(max_length=40)),
                ('created', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questionviews', to='Doctors.DoctorsPost')),
            ],
        ),
        migrations.CreateModel(
            name='socialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Twitter', models.URLField(blank=True)),
                ('Instagram', models.URLField(blank=True)),
                ('Telegram', models.URLField(blank=True)),
                ('Whatsapp', models.URLField(blank=True)),
                ('Linkedin', models.URLField(blank=True)),
                ('doctors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SocialMedia', to='Doctors.DoctorsPost')),
            ],
        ),
        migrations.CreateModel(
            name='Spec_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(allow_unicode=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Loc_children', to='Doctors.Spec_Category')),
            ],
            options={
                'verbose_name': 'تخصص',
                'verbose_name_plural': 'لیست تخصص ها',
            },
        ),
        migrations.AddField(
            model_name='doctorspost',
            name='loc_category',
            field=mptt.fields.TreeManyToManyField(related_name='loc_category', to='Doctors.Loc_Category', verbose_name='Loc_Category'),
        ),
        migrations.AddField(
            model_name='doctorspost',
            name='mainPhoto',
            field=filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, related_name='mainPhoto', to=settings.FILER_IMAGE_MODEL),
        ),
        migrations.AddField(
            model_name='doctorspost',
            name='spec_category',
            field=mptt.fields.TreeManyToManyField(related_name='spec_category', to='Doctors.Spec_Category', verbose_name='Spec_Category'),
        ),
        migrations.AddField(
            model_name='doctorspost',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='تگ ها'),
        ),
        migrations.AddField(
            model_name='doctorspost',
            name='thumbnailImage',
            field=filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnailImage', to=settings.FILER_IMAGE_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='doctors',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='Doctors.DoctorsPost'),
        ),
        migrations.AddField(
            model_name='comments',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Doctors.DoctorsPost'),
        ),
        migrations.AddField(
            model_name='closingrules',
            name='doctors',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Doctors.DoctorsPost', verbose_name='DoctorsPost'),
        ),
        migrations.AlterUniqueTogether(
            name='spec_category',
            unique_together=set([('parent', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='loc_category',
            unique_together=set([('parent', 'slug')]),
        ),
    ]
